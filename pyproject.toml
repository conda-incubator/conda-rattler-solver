################
# PyPI metadata
################
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "conda-rattler-solver"
description = "The fast pixi solver, now in conda"
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
requires-python = ">=3.8"
dependencies = [
  "conda >=25.3.0",
  "py-rattler >=0.13.1",
]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/conda-incubator/conda-rattler-solver"

[project.entry-points.conda]
conda-rattler-solver = "conda_rattler_solver.plugin"

##################
# Hatch metadata
##################
[tool.hatch.build.hooks.vcs]
version-file = "conda_rattler_solver/_version.py"

[tool.hatch.version]
source = "vcs"

#######################
# Testing Configuration
#######################

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]
omit = ["conda_rattler_solver/_version.py"]
show_missing = true
skip_covered = true
sort = "Miss"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=16",   # show 16 slowest tests
  "--strict-markers",
  "--tb=native",
  "-n=auto",
  "-vv",
]
markers = [
  "integration: integration tests that usually require an internet connect",
  "slow: slow running tests",
]

[tool.ruff]
target-version = "py39"
line-length = 99

[tool.ruff.lint]
flake8-type-checking = { exempt-modules = [], strict = true }
# see https://docs.astral.sh/ruff/rules/
select = [
  # "D1",  # pydocstyle
  "E",      # pycodestyle errors
  "F",      # pyflakes
  "FA",     # flake8-future-annotations
  "I",      # isort
  "ISC",    # flake8-implicit-str-concat
  "RUF100", # Unused noqa directive
  "T10",    # flake8-debugger
  "TCH",    # flake8-type-checking
  "UP",     # pyupgrade
  "W",      # pycodestyle warnings
]
